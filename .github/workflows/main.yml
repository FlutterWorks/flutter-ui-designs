on:
  push:
    tags:
      - '*'

name: Release Builds
jobs:
  # linux:
  #   name: Linux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         git clone https://github.com/flutter/flutter.git
  #         cd flutter
  #         git checkout 72aa23eb93
  #     - run: echo `pwd`"/flutter/bin" >> $GITHUB_PATH
  #     # - run: flutter doctor
  #     - uses: actions/checkout@v2
  #       with:
  #         path: 'app'
  #     - name: Install required build tools for linux
  #       run: sudo apt-get update && sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev
  #     - run: |
  #         cd app
  #         flutter config --enable-linux-desktop
  #         flutter pub get
  #         flutter build linux --release
  #         cd build/linux/release
  #         zip -r linux-release.zip bundle
  #     - name: Create linux Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: 'app/build/linux/release/linux-release.zip'
  #         token: ${{ secrets.TOKEN }}
  #         allowUpdates: true

  web:
    name: Web
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - run: echo `pwd`"/flutter/bin" >> $GITHUB_PATH

      - uses: actions/checkout@v4
        with:
          path: 'app'

      - name: Build web release
        run: |
          cd app
          flutter config --enable-web
          flutter pub get
          flutter build web -t lib/main.web.dart --release --no-tree-shake-icons
      
      - name: Copy privacy policy
        run: |
          cd app
          cp privacy-policy/index.html build/web/privacy-policy.html

      - name: Deploy to Firebase
        uses: w9jds/firebase-action
        with:
          args: deploy --only hosting  
        env:
          PROJECT_PATH: 'app'
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  # android:
  #   name: Android
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         git clone https://github.com/flutter/flutter.git
  #         cd flutter
  #         git checkout 72aa23eb93
  #     - run: echo `pwd`"/flutter/bin" >> $GITHUB_PATH
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '12.x'
  #     - name: Install NDK
  #       run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
  #     - uses: actions/checkout@v2
  #       with:
  #         path: 'app'
  #     - run: |
  #         cd app
  #         flutter pub get
  #         flutter build apk -t lib/main.firebase.dart --release
  #     - name: Create Android Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: 'app/build/app/outputs/apk/release/app-release.apk'
  #         token: ${{ secrets.TOKEN }}
  #         allowUpdates: true

  # macos:
  #   name: MacOS
  #   runs-on: macos-latest
  #   steps:
  #     - run: |
  #         git clone https://github.com/flutter/flutter.git
  #         cd flutter
  #         git checkout 72aa23eb93
  #     - run: echo `pwd`"/flutter/bin" >> $GITHUB_PATH
  #     - uses: actions/checkout@v2
  #       with:
  #         path: 'app'
  #     - run: |
  #         cd app
  #         flutter config --enable-macos-desktop
  #         flutter pub get
  #         flutter build macos -t lib/main.firebase.dart --release
  #         cd build/macos/Build/Products/Release
  #         ditto -c -k --sequesterRsrc --keepParent flutter_uis.app macos-release.zip
  #     - uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: 'app/build/macOS/Build/Products/Release/macos-release.zip'
  #         token: ${{ secrets.TOKEN }}
  #         allowUpdates: true

  # windows:
  #   name: Windows
  #   runs-on: windows-latest
  #   steps:
  #     - run: |
  #         git clone https://github.com/flutter/flutter.git
  #         cd flutter
  #         git checkout 72aa23eb93
  #     # - run: echo  >> $GITHUB_PATH
  #     - run: echo "$(pwd)\flutter\bin" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
  #     - uses: actions/checkout@v2
  #       with:
  #         path: 'app'
  #     - run: |
  #         cd app
  #         flutter config --enable-windows-desktop
  #         flutter pub get
  #         flutter build windows --release
  #         cd build\windows\runner
  #         Compress-Archive -Path Release -DestinationPath windows-release.zip
  #     - name: Windows release build for github
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: 'app\build\windows\runner\windows-release.zip'
  #         token: ${{ secrets.TOKEN }}
  #         allowUpdates: true
